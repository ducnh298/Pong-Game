/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.LobbyGame;

import control.ClientCtr;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ObjectWrapper;
import model.Player;
import view.ClientMainFrm;
import view.FriendFrm;
import view.LobbyGame.HostGameFrm;
import view.InfoPlayerFrm;

/**
 *
 * @author nguye
 */
public class GameMenuFrm extends javax.swing.JFrame {
    ClientCtr myControl;
    Player player;
    ArrayList<Player> challengeRequestList=new ArrayList<>();
    ArrayList<Player> playerList;
    ClientMainFrm cmf;
    
    /**
     * Creates new form GameMenu
     */
    public GameMenuFrm(ClientCtr myControl,ClientMainFrm cmf,Player player,ArrayList<Player> playerList){
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        centreWindow(this);
        this.myControl=myControl;
        this.player=player;
        this.playerList=playerList;
        this.cmf=cmf;
        initTable(0);
        myControl.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_REQUEST_CHALLENGE_LIST, this));
        myControl.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_CHALLENGE_PLAYER, this));
        
        myControl.sendData(new ObjectWrapper(ObjectWrapper.REQUEST_CHALLENGE_LIST, player.getId()));
    }
    public static void centreWindow(Window frame) {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
        frame.setLocation(x, y);
}
    public void receivedData(ObjectWrapper data) {
        if(data.getPerformative()==ObjectWrapper.REPLY_REQUEST_CHALLENGE_LIST){
            if(data.getData() instanceof ArrayList<?>){
              ArrayList<Integer> list = (ArrayList<Integer>) data.getData();
              System.out.println("challenge request list: "+list);
              challengeRequestList.clear();
               if(list.size()>0){
                for(int i=0;i<list.size();i++)
                    for(int j=0;j<playerList.size();j++)
                        if(list.get(i)==playerList.get(j).getId()){
                            challengeRequestList.add(playerList.get(j));
                            break;
                        }
                fillTable(challengeRequestList);
               }
            }
        }
        if(data.getPerformative()==ObjectWrapper.REPLY_CHALLENGE_PLAYER){
            if(data.getData() instanceof ArrayList<?>){
              ArrayList<Integer> challenge = (ArrayList<Integer>) data.getData();
              Player hostPlayer=null;
              for(int i=0;i<playerList.size();i++)
                  if(playerList.get(i).getId()==challenge.get(0)){
                      hostPlayer=playerList.get(i); break;}
              
              if(challenge.get(2)==1){
                  HostGameFrm hgf = new HostGameFrm(myControl,cmf, player.getId(), hostPlayer, player);
                  hgf.setVisible(true);
              }
              else
                  JOptionPane.showMessageDialog(this, "The challenger no longer want to challenge you!");
            }
        }
    }
    public void refresh(){
        myControl.sendData(new ObjectWrapper(ObjectWrapper.REQUEST_CHALLENGE_LIST, player.getId()));
    }
    public void initTable(int size){
       String[] columnNames = {"", "NickName", ""};
       DefaultTableModel tableModel = new DefaultTableModel(columnNames, size) {
    @Override
    public boolean isCellEditable(int row, int column) {
       //all cells false
       return false;
            }
        };
            jTable1.setModel(tableModel); 
    }
    
    public void fillTable(ArrayList<Player> list) { 
        initTable(list.size());        
            for(int i=0; i<list.size(); i++){
                jTable1.setValueAt(i+1+"", i, 0);
                jTable1.setValueAt(list.get(i).getNickName(), i, 1); 
                jTable1.setValueAt("Invite you to a match!",i,2); 
                
              }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Play vs random player");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Host game");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Challenge requests");

        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(96, 96, 96))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(36, 36, 36)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int column = jTable1.getColumnModel().getColumnIndexAtX(evt.getX()); // get the coloum of the button
        int row = evt.getY() / jTable1.getRowHeight(); // get the row of the button
 
                // *Checking the row or column is valid or not
        if (row<challengeRequestList.size() &&row < jTable1.getRowCount() && row >= 0 && column < jTable1.getColumnCount() && column >= 0) {
            int c = JOptionPane.showConfirmDialog(this, "Accept challenge from "+challengeRequestList.get(row).getNickName()+" ?", "Response challenge request", JOptionPane.YES_NO_CANCEL_OPTION);
            ArrayList<Integer> response = new ArrayList<>();
            response.add(challengeRequestList.get(row).getId());
            response.add(player.getId());
            System.out.println(player.getId()+"----Challenge Id: "+challengeRequestList.get(row).getId() );
            if(c==JOptionPane.YES_OPTION){
                if(challengeRequestList.get(row).getStatus()=="offlined")
                    JOptionPane.showMessageDialog(this, "This player is currently offline.\n Wait for them to go Online, to be able to accept this challenge!");
                else{
                    challengeRequestList.remove(row);
                    fillTable(challengeRequestList);
                    response.add(1);
                    myControl.sendData(new ObjectWrapper(ObjectWrapper.RESPONSE_CHALLENGE, response));
                    this.dispose();
                }
            }else if(c==JOptionPane.NO_OPTION){
                challengeRequestList.remove(row);
                fillTable(challengeRequestList);
                response.add(0);
                myControl.sendData(new ObjectWrapper(ObjectWrapper.RESPONSE_CHALLENGE, response));
            }
          }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        myControl.sendData(new ObjectWrapper(ObjectWrapper.REQUEST_CHALLENGE_LIST, player.getId()));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         for(int i=0;i<myControl.getActiveFunction().size();i++){
                    if(myControl.getActiveFunction().get(i).getData() instanceof HostGameFrm) {
                        myControl.getActiveFunction().remove(i);  
                    }
                }
                         HostGameFrm  hgf = new HostGameFrm(myControl,cmf, player.getId(), player, null);
                         hgf.setVisible(true);
                    this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    
}
