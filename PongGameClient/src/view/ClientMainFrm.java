/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.ClientCtr;
import model.*;
import view.LobbyGame.GameMenuFrm;
import view.LobbyGame.HostGameFrm;
import view.clan.ClanFrm;
import view.login.LoginFrm;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.ArrayList;

/**
 * @author nguye
 */
public class ClientMainFrm extends javax.swing.JFrame {
    private ClientCtr myControl;
    Player player = new Player();
    User us = new User();
    int playerId;
    ArrayList<Player> playerList = new ArrayList<>();
    ArrayList<Integer> onlinePlayer = new ArrayList<>();
    ArrayList<Player> friendList = new ArrayList<>();
    private ArrayList<Integer> inGamePlayer = new ArrayList<>();

    /**
     * Creates new form MainMenu
     */
    public ClientMainFrm() {
        initComponents();
        centreWindow(this);

        myControl = new ClientCtr(this);
        myControl.openConnection();

        for (ObjectWrapper func : myControl.getActiveFunction())
            if (func.getData() instanceof LoginFrm) {
                ((LoginFrm) func.getData()).setVisible(true);
                return;
            }
        LoginFrm lf = new LoginFrm(myControl, this);
        lf.setVisible(true);
        myControl.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_PLAYER_LIST, this));
        myControl.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_FRIEND_LIST, this));
        myControl.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.RESPONSE_CHALLENGER, this));

    }

    public static void centreWindow(Window frame) {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
        frame.setLocation(x, y);
    }

    public void setPlayerId(int key) {
        this.playerId = key;
        System.out.println("---" + key + "---");
    }

    public ArrayList<Player> getPlayerList() {
        return playerList;
    }

    public Player getPlayer() {
        return player;
    }

    public ArrayList<Player> getFriendList() {
        return friendList;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 204));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Ping Pong Game");

        jButton1.setBackground(new java.awt.Color(153, 255, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Profile");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("Ranking");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Online Player");

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setText("Friend");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setText("Clan");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Refresh");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(38, 38, 38)
                                                                .addComponent(jButton5))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(16, 16, 16)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(jButton3)
                                                                        .addComponent(jButton4)
                                                                        .addComponent(jButton2))))
                                                .addGap(67, 67, 67)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(79, 79, 79)
                                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(70, 70, 70)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jButton6)
                                                .addGap(94, 94, 94))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton1)
                                                .addGap(30, 30, 30)
                                                .addComponent(jButton2)
                                                .addGap(39, 39, 39)
                                                .addComponent(jButton4)
                                                .addGap(42, 42, 42)
                                                .addComponent(jButton5)))
                                .addGap(18, 18, 18)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        for (ObjectWrapper func : myControl.getActiveFunction())
            if (func.getData() instanceof ProfileFrm) {
                ((ProfileFrm) func.getData()).setVisible(true);
                return;
            }
        ProfileFrm pf = new ProfileFrm(this, myControl, player);
        pf.setVisible(true);
        pf.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        for (ObjectWrapper func : myControl.getActiveFunction())
            if (func.getData() instanceof RankingFrm) {
                ((RankingFrm) func.getData()).setVisible(true);
                return;
            }
        RankingFrm rf = new RankingFrm(myControl, this, playerList, player, friendList);

        rf.setVisible(true);
        rf.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        for (ObjectWrapper func : myControl.getActiveFunction())
            if (func.getData() instanceof GameMenuFrm) {
                ((GameMenuFrm) func.getData()).setVisible(true);
                ((GameMenuFrm) func.getData()).refresh();
                return;
            }
        GameMenuFrm gmf = new GameMenuFrm(myControl, this, player, playerList);

        gmf.setVisible(true);
        gmf.setAlwaysOnTop(true);
        gmf.refresh();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int column = jTable1.getColumnModel().getColumnIndexAtX(evt.getX()); // get the coloum of the button
        int row = evt.getY() / jTable1.getRowHeight(); // get the row of the button

        // *Checking the row or column is valid or not
        if (row < playerList.size() && row < jTable1.getRowCount() && row >= 0 && column < jTable1.getColumnCount() && column >= 0) {
            for (int i = 0; i < myControl.getActiveFunction().size(); i++) {
                if (myControl.getActiveFunction().get(i).getData() instanceof InfoPlayerFrm) {
                    myControl.getActiveFunction().remove(i);
                }
            }
            (new InfoPlayerFrm(myControl, (Player) playerList.get(row), player, friendList, false, null)).setVisible(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        int h = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Exit?", JOptionPane.YES_NO_OPTION);

        if (h == JOptionPane.NO_OPTION) {
            setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
            return;
        } else if (h == JOptionPane.YES_OPTION) {
            myControl.sendData(new ObjectWrapper(ObjectWrapper.CLIENT_INFORM_OFFLINE_PLAYER, playerId));
            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            this.dispose();
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        for (ObjectWrapper func : myControl.getActiveFunction())
            if (func.getData() instanceof FriendFrm) {
                ((FriendFrm) func.getData()).setVisible(true);
                return;
            }
        FriendFrm ff = new FriendFrm(this, myControl, friendList, playerList, player);
        ff.setVisible(true);
        ff.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        for (ObjectWrapper func : myControl.getActiveFunction())
            if (func.getData() instanceof ClanFrm) {
                ((ClanFrm) func.getData()).setVisible(true);
                return;
            }
        ClanFrm cf = new ClanFrm(myControl, this, player, playerList, friendList);
        cf.setVisible(true);
        cf.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        updatePlayerList();
        updateFriendList();
    }//GEN-LAST:event_jButton6ActionPerformed

    public void updatePlayerList() {
        myControl.sendData(new ObjectWrapper(ObjectWrapper.PLAYER_LIST, playerId));
    }

    public void updateFriendList() {
        myControl.sendData(new ObjectWrapper(ObjectWrapper.FRIEND_LIST, playerId));
    }

    public void receivedData(ObjectWrapper data) {
        if (data.getPerformative() == ObjectWrapper.REPLY_PLAYER_LIST) {
            if (data.getData() instanceof ArrayList<?>) {
                ArrayList<Player> list = (ArrayList<Player>) data.getData();
                playerList = (ArrayList<Player>) list;
                for (int i = 0; i < playerList.size(); i++) {
                    if (playerList.get(i).getId() == playerId) {
                        player = (Player) playerList.get(i);
                        jLabel3.setText("Welcome " + player.getNickName());
                    }
                }
                fillTable(playerList, onlinePlayer, inGamePlayer);
            } else
                JOptionPane.showMessageDialog(this, "Failed to load player list from server");
        }
        if (data.getPerformative() == ObjectWrapper.REPLY_FRIEND_LIST) {
            Friend list = (Friend) data.getData();
            if (list.getFriend().size() >= 0) {
                friendList = list.getFriend();
                for (int i = 0; i < playerList.size(); i++) {
                    for (int j = 0; j < friendList.size(); j++) {
                        if (playerList.get(i).getId() == friendList.get(j).getId() && friendList.get(j).getId() != playerId) {
                            friendList.get(j).setStatus(playerList.get(i).getStatus());
                            break;
                        }
                    }
                }
            } else
                JOptionPane.showMessageDialog(this, "Failed to load friend list from server.");
        }
    }

    public void receivedChallengeData(ObjectWrapper data) {
        if (data.getPerformative() == ObjectWrapper.RESPONSE_CHALLENGER) {
            ArrayList<Integer> challenge = (ArrayList<Integer>) data.getData();
            Player pl = new Player();
            for (int i = 0; i < playerList.size(); i++)
                if (playerList.get(i).getId() == challenge.get(1)) {
                    pl = playerList.get(i);
                    break;
                }
            if (challenge.get(0) == playerId) {
                if (challenge.get(2) == 1) {
                    int c = JOptionPane.showConfirmDialog(this, pl.getNickName() + " has accepted your challenge!\nEnter Lobby?", "Challenge accepted!", JOptionPane.YES_NO_OPTION);
                    if (c == JOptionPane.YES_OPTION) {
                        boolean temp = false;
                        for (int i = 0; i < myControl.getActiveFunction().size(); i++) {
                            if (myControl.getActiveFunction().get(i).getData() instanceof HostGameFrm) {
                                ((HostGameFrm) myControl.getActiveFunction().get(i).getData()).dispose();
                                myControl.getActiveFunction().remove(i);
                            }
                        }
                        HostGameFrm hgf = new HostGameFrm(myControl, this, playerId, player, pl);
                        hgf.setVisible(true);
                        myControl.sendData(new ObjectWrapper(ObjectWrapper.RESPONSE_CHALLENGE_PLAYER, challenge));
                    } else {
                        challenge.set(2, 0);
                        myControl.sendData(new ObjectWrapper(ObjectWrapper.RESPONSE_CHALLENGE_PLAYER, challenge));
                    }
                } else if (challenge.get(2) == 0)
                    JOptionPane.showMessageDialog(this, pl.getNickName() + " has rejected your challenge!");
            }
        }
    }

    public void updateOnlinePlayer(ObjectWrapper data) {
        if (data.getData() instanceof ArrayList<?>) {
            this.onlinePlayer = (ArrayList<Integer>) data.getData();
            System.out.println("onlineplayer " + onlinePlayer);
            if (playerList.size() > 0 && onlinePlayer.size() > 0)
                fillTable(playerList, onlinePlayer, inGamePlayer);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to load online player from server");
        }
    }

    public void updateInGamePlayer(ObjectWrapper data) {
        if (data.getData() instanceof ArrayList<?>) {
            this.inGamePlayer = (ArrayList<Integer>) data.getData();
            if (playerList.size() > 0)
                fillTable(playerList, onlinePlayer, inGamePlayer);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to load ingame player from server");
        }
    }

    public void initTable(int size) {
        String[] columnNames = {"", "NickName", "Status"};
        DefaultTableModel tableModel = new DefaultTableModel(columnNames, size) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        jTable1.setModel(tableModel);
    }

    public void fillTable(ArrayList<Player> playerList, ArrayList<Integer> onlinePlayer, ArrayList<Integer> inGamePlayer) {
        initTable(this.playerList.size());

        for (int i = 0; i < playerList.size(); i++) {
            jTable1.setValueAt(i + 1 + "", i, 0);
            jTable1.setValueAt(playerList.get(i).getNickName(), i, 1);
            playerList.get(i).setStatus("offline");
            if (onlinePlayer.size() > 0)
                for (int j = 0; j < onlinePlayer.size(); j++) {
                    if (playerList.get(i).getId() == onlinePlayer.get(j)) {
                        jTable1.setValueAt("Online", i, 2);
                        playerList.get(i).setStatus("Online");
                        break;
                    }
                }
            if (inGamePlayer.size() > 0) {
                for (int k = 0; k < inGamePlayer.size(); k++) {
                    if (playerList.get(i).getId() == inGamePlayer.get(k)) {
                        jTable1.setValueAt("In-Game", i, 2);
                        playerList.get(i).setStatus("In-Game");
                        break;
                    }
                }
            }
        }
    }


    public void showMessageFromPlayer(ObjectWrapper data) {
        Message ms = (Message) data.getData();
        if (ms.getMessage().equals("challenge")) {
            JOptionPane.showMessageDialog(this, "You've got new challenge!!!");
        } else if (ms.getMessage().equals("invite")) {
            JOptionPane.showMessageDialog(this, "You've got new invitation!!!");
        }
    }

    public void showMessage(String s) {
        JOptionPane.showMessageDialog(this, s);
    }

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientMainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientMainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientMainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientMainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientMainFrm();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables


}
